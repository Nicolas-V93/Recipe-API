// <auto-generated />
using System;
using Imi.Project.Api.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Imi.Project.Api.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasApprovedTerms")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000001",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c8554266-b401-4519-9aeb-a9283053fc58",
                            Email = "admin@imi.be",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@IMI.BE",
                            NormalizedUserName = "IMIADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAENW++m6CMCfkpe3JWsyyd3wY9jXvr5XqxHBQEg3sFnR1EcjFMigduG9nM23ttJrIdg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "VVPCRDAS3MJWQD5CSW2GWPRADBXEZINA",
                            TwoFactorEnabled = false,
                            UserName = "ImiAdmin"
                        },
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000002",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2b3ba136-4654-49c1-8329-1e266a1f7453",
                            Email = "user@imi.be",
                            EmailConfirmed = true,
                            HasApprovedTerms = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER@IMI.BE",
                            NormalizedUserName = "IMIUSER",
                            PasswordHash = "AQAAAAEAACcQAAAAEAggOQ7iRthJ2s8zJqV+1hKVPQEEdozZ5A71WCjnYBzMTkhIY0x46W/1lgqJBUcEOQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "WWPCRDAS3MJWQD5CSW2GWPRADBXEZINA",
                            TwoFactorEnabled = false,
                            UserName = "ImiUser"
                        },
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000003",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "fad66526-654c-4000-b7b3-30349c41f171",
                            Email = "refuser@imi.be",
                            EmailConfirmed = true,
                            HasApprovedTerms = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "REFUSER@IMI.BE",
                            NormalizedUserName = "IMIREFUSER",
                            PasswordHash = "AQAAAAEAACcQAAAAECawuqMxRyjEndnJ2l3ocNmmzUYQDGvk+LCqhKgsLL2PDRlajqswC3MmEZY3EuJkmw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "YYPCRDAS3MJWQD5CSW2GWPRADBXEZINA",
                            TwoFactorEnabled = false,
                            UserName = "ImiRefuser"
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8f1023cd-0a5a-4e53-b024-76d2c111e4c5"),
                            Name = "breakfast"
                        },
                        new
                        {
                            Id = new Guid("da4c0975-41c5-4651-9235-0ff05fcc9e68"),
                            Name = "lunch"
                        },
                        new
                        {
                            Id = new Guid("4168b4e7-b6b8-44de-a64b-7b6bccb1c1aa"),
                            Name = "dinner"
                        },
                        new
                        {
                            Id = new Guid("08819291-50e2-4c2b-b0a1-3a85ffe13ea8"),
                            Name = "snack"
                        },
                        new
                        {
                            Id = new Guid("fdfa7823-b3cb-4354-98cd-ae768eb7af0f"),
                            Name = "side dish"
                        },
                        new
                        {
                            Id = new Guid("27fa19ac-73ef-453d-a5d7-d7f2f90a5a54"),
                            Name = "beverage"
                        },
                        new
                        {
                            Id = new Guid("5a42a6dc-79d0-4c3e-99ec-06def96cc5c6"),
                            Name = "dessert"
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Diet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Diets");

                    b.HasData(
                        new
                        {
                            Id = new Guid("72879d1b-cad1-493d-9b87-cf39b98fa204"),
                            Name = "anything"
                        },
                        new
                        {
                            Id = new Guid("fbaa5c0a-b224-4ba8-ac7b-1f3b5a4cacd3"),
                            Name = "vegetarian"
                        },
                        new
                        {
                            Id = new Guid("7b5b75ce-ea6e-46f5-9ca9-bd6ba7f6d682"),
                            Name = "vegan"
                        },
                        new
                        {
                            Id = new Guid("a1b84c43-91db-4295-8d92-3383219599ed"),
                            Name = "paleo"
                        },
                        new
                        {
                            Id = new Guid("705f40d3-fc00-4781-a7b9-8c38dbfd6987"),
                            Name = "keto"
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.FavoriteRecipe", b =>
                {
                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RecipeId", "ApplicationUserId");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("FavoriteRecipes");
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Ingredient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1c41dcde-22c9-4ae8-a1f5-718aea034da0"),
                            Name = "red onion"
                        },
                        new
                        {
                            Id = new Guid("6d461018-2399-412f-89fe-48a1d91e1c23"),
                            Name = "salt"
                        },
                        new
                        {
                            Id = new Guid("b1881084-9338-4f08-b410-fc873cc32b6f"),
                            Name = "pepper"
                        },
                        new
                        {
                            Id = new Guid("9325f2d5-05f3-4ca5-b9ab-bef617030ceb"),
                            Name = "avocado"
                        },
                        new
                        {
                            Id = new Guid("3b79e7f5-95f4-44dc-90b3-254f6adc1af2"),
                            Name = "vanilla"
                        },
                        new
                        {
                            Id = new Guid("16ecdb26-24ec-48b6-8ffd-45bc188ad234"),
                            Name = "kosher salt"
                        },
                        new
                        {
                            Id = new Guid("3fd377b4-7400-4309-820c-15264ff4d7d6"),
                            Name = "unsweetened cacao powder"
                        },
                        new
                        {
                            Id = new Guid("4f830a38-a506-4c08-acb1-823f79a4cd66"),
                            Name = "bell pepper"
                        },
                        new
                        {
                            Id = new Guid("67355bf3-fa20-4ffc-9f61-21f96b8695aa"),
                            Name = "garlic"
                        },
                        new
                        {
                            Id = new Guid("73743b7a-4d22-43c6-9be4-6caf81fe350b"),
                            Name = "chili powder"
                        },
                        new
                        {
                            Id = new Guid("b1182f5b-d42a-4180-8353-7d3a92c2a087"),
                            Name = "ground cumin"
                        },
                        new
                        {
                            Id = new Guid("53d679c2-afb1-443b-80ea-4fb8dc6d9fd9"),
                            Name = "dried oregano"
                        },
                        new
                        {
                            Id = new Guid("64867aa2-8999-460d-9594-1e572cb095d2"),
                            Name = "smoked paprika"
                        },
                        new
                        {
                            Id = new Guid("729c7745-ad0d-4c4d-bdb3-e3cc88795946"),
                            Name = "firm tofu"
                        },
                        new
                        {
                            Id = new Guid("002ddabe-b201-4679-9bfe-f6dca4cc7b53"),
                            Name = "oat milk"
                        },
                        new
                        {
                            Id = new Guid("6c8e12c8-a6fd-44b5-a47c-2f6026345859"),
                            Name = "turmeric"
                        },
                        new
                        {
                            Id = new Guid("97a1d277-4983-4391-bff2-d5eed6f0b722"),
                            Name = "nutritional yeast"
                        },
                        new
                        {
                            Id = new Guid("ced46de1-3ca6-4e36-8860-c3ea9cbe7818"),
                            Name = "banana"
                        },
                        new
                        {
                            Id = new Guid("a7259215-0019-447c-bf29-edb6ec508f6b"),
                            Name = "almond milk"
                        },
                        new
                        {
                            Id = new Guid("b323a5e0-1049-4d74-b263-fa8b3ddb274a"),
                            Name = "greek yogurt"
                        },
                        new
                        {
                            Id = new Guid("372c5ae2-7acc-48a6-b65f-9de13846c9d3"),
                            Name = "strawberries"
                        },
                        new
                        {
                            Id = new Guid("5a934a61-3346-4fd4-bdc4-325398557bf9"),
                            Name = "raspberries"
                        },
                        new
                        {
                            Id = new Guid("1c5e3925-8ae4-4926-9eac-3628e7920984"),
                            Name = "blackberries"
                        },
                        new
                        {
                            Id = new Guid("f40bb01d-0ae6-411c-815f-0125f01f1224"),
                            Name = "tuna"
                        },
                        new
                        {
                            Id = new Guid("299140ef-1ffe-4c3b-84c9-11b2c3022f62"),
                            Name = "lime"
                        },
                        new
                        {
                            Id = new Guid("f2f4799b-cd1b-4b70-85a9-171cc1d130ae"),
                            Name = "celery"
                        },
                        new
                        {
                            Id = new Guid("a3477ac7-b564-4312-89e4-e5159c0ca6ee"),
                            Name = "jalapenos"
                        },
                        new
                        {
                            Id = new Guid("16caadcd-699e-4a5d-9dc5-f54e41692784"),
                            Name = "heavy cream"
                        },
                        new
                        {
                            Id = new Guid("3a1ec623-e070-4912-9fce-4e48bb9aa5e9"),
                            Name = "keto chocolate chips"
                        },
                        new
                        {
                            Id = new Guid("58090840-b96b-4a9f-a36c-21595d46a455"),
                            Name = "honey"
                        },
                        new
                        {
                            Id = new Guid("74fcb0c7-2714-43d3-8f02-7cc22f8d50a1"),
                            Name = "bacon"
                        },
                        new
                        {
                            Id = new Guid("ced0cac2-2ee1-474c-a07e-a8f1b9b77608"),
                            Name = "yellow onion"
                        },
                        new
                        {
                            Id = new Guid("f53feeb9-bc74-4211-9772-fd4ba3806b73"),
                            Name = "celery stalks"
                        },
                        new
                        {
                            Id = new Guid("24e47ca1-08cc-4c98-a84e-fb9876d2c39a"),
                            Name = "lean ground beef"
                        },
                        new
                        {
                            Id = new Guid("762ec50f-7ce0-4fe5-b8bb-a3e117974909"),
                            Name = "vanilla ice cream"
                        },
                        new
                        {
                            Id = new Guid("6fa6e3d9-29ed-467f-9237-59ee215af996"),
                            Name = "milk"
                        },
                        new
                        {
                            Id = new Guid("cbdb9581-c465-46e6-a862-3c9d264f02e1"),
                            Name = "whipped topping"
                        },
                        new
                        {
                            Id = new Guid("a4668ff6-a7f7-415a-a702-9949b8bab432"),
                            Name = "sprinkles"
                        },
                        new
                        {
                            Id = new Guid("1cddb371-eaa0-4345-88ea-3a76b8cad449"),
                            Name = "brown rice"
                        },
                        new
                        {
                            Id = new Guid("47d92972-b628-49a8-a622-484ebd54b9b1"),
                            Name = "green onion"
                        },
                        new
                        {
                            Id = new Guid("50e92746-f0ca-404f-af02-acc95f20fb7f"),
                            Name = "peas"
                        },
                        new
                        {
                            Id = new Guid("7a34c6ab-9b1f-4da1-8bf5-9c3e06b48d5c"),
                            Name = "carrots"
                        },
                        new
                        {
                            Id = new Guid("43e97756-9852-4be9-8501-e29c10d17c18"),
                            Name = "soy sauce"
                        },
                        new
                        {
                            Id = new Guid("516d455e-b9cf-4cbe-b621-e9e3b4eb2efb"),
                            Name = "peanut butter"
                        },
                        new
                        {
                            Id = new Guid("e67642d0-a2dc-4208-b0a1-ef264c13f4af"),
                            Name = "maple syrup"
                        },
                        new
                        {
                            Id = new Guid("9d3d6081-f9b0-41f1-8e1b-c3fb2d8815f7"),
                            Name = "sesame oil"
                        },
                        new
                        {
                            Id = new Guid("77cbcee7-7699-464a-af62-cd8529383f63"),
                            Name = "all-purpose flour"
                        },
                        new
                        {
                            Id = new Guid("e8a0437f-5fe7-4266-ae18-6926ff873e43"),
                            Name = "baking powder"
                        },
                        new
                        {
                            Id = new Guid("85d89810-70c9-4331-9b4a-0ff093214292"),
                            Name = "white sugar"
                        },
                        new
                        {
                            Id = new Guid("5ce56d5f-6c78-487b-9c2f-e24d38d422fc"),
                            Name = "butter"
                        },
                        new
                        {
                            Id = new Guid("3c43ac55-3080-49b7-89cb-9bf73e1b529c"),
                            Name = "egg"
                        },
                        new
                        {
                            Id = new Guid("5580b4a8-a8ea-4d59-bb74-e2a6d3e0b2e0"),
                            Name = "rapeseed oil"
                        },
                        new
                        {
                            Id = new Guid("046dce63-063c-4b9e-887e-373efa9d2523"),
                            Name = "lemon"
                        },
                        new
                        {
                            Id = new Guid("f7e1dbe8-7d10-4c81-b546-39755a644c12"),
                            Name = "balsemic vinegar"
                        },
                        new
                        {
                            Id = new Guid("d30e3a42-b19f-4d76-9148-0800e00bd667"),
                            Name = "basil"
                        },
                        new
                        {
                            Id = new Guid("a62e02da-4a65-41d8-be38-b10ed92b6729"),
                            Name = "potatoe"
                        },
                        new
                        {
                            Id = new Guid("64fb3156-5102-4130-94e7-c3d4bde88b63"),
                            Name = "green beans"
                        },
                        new
                        {
                            Id = new Guid("754db697-abf5-47bf-8af3-eccf6cbcf183"),
                            Name = "cherry tomato"
                        },
                        new
                        {
                            Id = new Guid("f4786aa0-8fac-4a7e-bc75-9379e4927973"),
                            Name = "romaine lettuce"
                        },
                        new
                        {
                            Id = new Guid("b0297b6f-c66b-4e25-9dd7-2ea631da0a6d"),
                            Name = "kalamata olive"
                        },
                        new
                        {
                            Id = new Guid("35ba74dd-b3ad-44e2-9d80-6abb956a0bbd"),
                            Name = "protein powder"
                        },
                        new
                        {
                            Id = new Guid("d044f72e-a406-40c2-bf23-c832b6a80c0c"),
                            Name = "chocolate chips"
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Instruction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("StepNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("Instructions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4a4c2ea3-5b69-455e-8d1f-fd8b42da9f53"),
                            Description = "Scramble the block of tofu with your hands (see picture above) into small and bigger pieces.",
                            RecipeId = new Guid("350c87a1-ffdc-473c-8af9-83edf8db8c31"),
                            StepNumber = 1
                        },
                        new
                        {
                            Id = new Guid("c36a6a86-677a-45ae-a946-30e7c86b3317"),
                            Description = "Heat 1 tablespoon of oil on medium heat in a pan. Caramelize the chopped red onions",
                            RecipeId = new Guid("350c87a1-ffdc-473c-8af9-83edf8db8c31"),
                            StepNumber = 2
                        },
                        new
                        {
                            Id = new Guid("f17fc301-2c86-48a6-9dfc-5cd0ddeec594"),
                            Description = "Add the scrambled tofu and stir for 1 minute.",
                            RecipeId = new Guid("350c87a1-ffdc-473c-8af9-83edf8db8c31"),
                            StepNumber = 3
                        },
                        new
                        {
                            Id = new Guid("3027df98-0ca3-4299-8ae8-d193561668f7"),
                            Description = "Add the 1/2 cup of oat milk and stir until the tofu has soaked up most of it.",
                            RecipeId = new Guid("350c87a1-ffdc-473c-8af9-83edf8db8c31"),
                            StepNumber = 4
                        },
                        new
                        {
                            Id = new Guid("6c41439f-cce7-4ea8-ab5c-9fc94e975596"),
                            Description = "When there is only a small amount of milk remaining, add all of the remaining ingredients and stir for another 3-4 minutes on low to medium heat.",
                            RecipeId = new Guid("350c87a1-ffdc-473c-8af9-83edf8db8c31"),
                            StepNumber = 5
                        },
                        new
                        {
                            Id = new Guid("3c36ac51-853e-4e00-94c7-aee576cf5e98"),
                            Description = "Serve with fresh bread.",
                            RecipeId = new Guid("350c87a1-ffdc-473c-8af9-83edf8db8c31"),
                            StepNumber = 6
                        },
                        new
                        {
                            Id = new Guid("6b5da959-e032-4359-912d-276c5d5733a4"),
                            Description = "In a blender, combine all ingredients and blend until smooth.",
                            RecipeId = new Guid("e59cb9cd-e770-4c15-b3fa-82e153bf8546"),
                            StepNumber = 1
                        },
                        new
                        {
                            Id = new Guid("a6f2ac69-df2b-4efa-ada0-8cd7d80c0e54"),
                            Description = "Divide between 2 cups and top with blackberries, if desired.",
                            RecipeId = new Guid("e59cb9cd-e770-4c15-b3fa-82e153bf8546"),
                            StepNumber = 2
                        },
                        new
                        {
                            Id = new Guid("082c7df5-a507-4a18-91f9-3d4a59fdf718"),
                            Description = "Mash the avocado and lime juice together with sea salt.",
                            RecipeId = new Guid("5ad0e1ba-5b8f-46b8-810f-18bcf88356ff"),
                            StepNumber = 1
                        },
                        new
                        {
                            Id = new Guid("206da961-1205-48bb-a5b2-d1ebece3ae61"),
                            Description = "Add the tuna, cilantro, red onion, celery, and jalapeños (if using). Stir everything together, breaking apart any large pieces of tuna as needed.",
                            RecipeId = new Guid("5ad0e1ba-5b8f-46b8-810f-18bcf88356ff"),
                            StepNumber = 2
                        },
                        new
                        {
                            Id = new Guid("4f2f299b-0a3e-42ca-be5b-6aea008a1bcc"),
                            Description = "Adjust salt and jalapeños to taste if needed. Serve immediately.",
                            RecipeId = new Guid("5ad0e1ba-5b8f-46b8-810f-18bcf88356ff"),
                            StepNumber = 3
                        },
                        new
                        {
                            Id = new Guid("d66a39e0-3413-4f65-a27f-0469f0262ec3"),
                            Description = "In a food processor or blender, blend all ingredients except chocolate curls until smooth.",
                            RecipeId = new Guid("a8826730-ee34-42fa-9fdd-357efa440e8f"),
                            StepNumber = 1
                        },
                        new
                        {
                            Id = new Guid("97298c36-6fd6-4533-aef0-0695cbe3e4bd"),
                            Description = "Transfer to serving glasses and refrigerate 30 minutes and up to 1 hour. Garnish with chocolate curls if using.",
                            RecipeId = new Guid("a8826730-ee34-42fa-9fdd-357efa440e8f"),
                            StepNumber = 2
                        },
                        new
                        {
                            Id = new Guid("edc1d587-b322-4135-9fd7-ae683fc15014"),
                            Description = "In a large pot over medium heat, cook bacon. When bacon is crisp, remove from pot with a slotted spoon. Add onion, celery, and peppers to pot and cook until soft, 6 minutes. Add garlic and cook until fragrant, 1 minute more.",
                            RecipeId = new Guid("1a529ac5-d1ee-48a6-b654-c37bde10202f"),
                            StepNumber = 1
                        },
                        new
                        {
                            Id = new Guid("13712e2e-8fb5-4081-9c77-2d288d3e2eda"),
                            Description = "Push vegetables to one side of the pan and add beef. Cook, stirring occasionally, until no pink remains. Drain fat and return to heat.",
                            RecipeId = new Guid("1a529ac5-d1ee-48a6-b654-c37bde10202f"),
                            StepNumber = 2
                        },
                        new
                        {
                            Id = new Guid("137243c6-4eb1-4eea-b516-4c26916eecea"),
                            Description = "Add chili powder, cumin, oregano, and paprika and season with salt and pepper. Stir to combine and cook 2 minutes more. Add tomatoes and broth and bring to a simmer. Let cook 10 to 15 more minutes, until chili has thickened slightly. ",
                            RecipeId = new Guid("1a529ac5-d1ee-48a6-b654-c37bde10202f"),
                            StepNumber = 3
                        },
                        new
                        {
                            Id = new Guid("b6c3a5a0-c53d-486b-adc5-cca2767491d6"),
                            Description = "Ladle into bowls and top with reserved bacon, jalapeños, cilantro, and avocado.",
                            RecipeId = new Guid("1a529ac5-d1ee-48a6-b654-c37bde10202f"),
                            StepNumber = 4
                        },
                        new
                        {
                            Id = new Guid("6a50b968-0e52-48bf-870b-1ea9075e30b7"),
                            Description = "In a blender, blend together ice cream and milk.",
                            RecipeId = new Guid("6774c795-1374-4968-b8c4-d799c95a99aa"),
                            StepNumber = 1
                        },
                        new
                        {
                            Id = new Guid("c4d5c156-e964-47e5-9d7a-1bb9c9520c79"),
                            Description = "Pour into a glass and garnish with whipped topping, sprinkles, cacao powder and a cherry.",
                            RecipeId = new Guid("6774c795-1374-4968-b8c4-d799c95a99aa"),
                            StepNumber = 2
                        },
                        new
                        {
                            Id = new Guid("c95d7068-cd00-4a07-8743-b7296604c4af"),
                            Description = "Preheat oven to 400 degrees F (204 C) and line a baking sheet with parchment paper (or lightly grease with non-stick spray).",
                            RecipeId = new Guid("ce5db7c4-d085-4c2e-ae6c-8458e21b40fa"),
                            StepNumber = 1
                        },
                        new
                        {
                            Id = new Guid("c17a04d9-5711-42b5-8b1a-0c96e7c0d308"),
                            Description = "In the meantime wrap tofu in a clean, absorbent towel and set something heavy on top (such as a cast iron skillet) to press out the liquid.",
                            RecipeId = new Guid("ce5db7c4-d085-4c2e-ae6c-8458e21b40fa"),
                            StepNumber = 2
                        },
                        new
                        {
                            Id = new Guid("b5d5f784-4b20-4bbc-8e21-598083f04228"),
                            Description = "Once the oven is preheated, dice tofu into 1/4-inch cubes and arrange on baking sheet. Bake for 26-30 minutes. You’re looking for golden brown edges and a texture that’s firm to the touch. The longer it bakes, the firmer and crispier it will become, so if you’re looking for softer tofu remove from the oven around the 26-28 minute mark. I prefer crispy tofu, so I bake mine the full 30 minutes. Set aside.",
                            RecipeId = new Guid("ce5db7c4-d085-4c2e-ae6c-8458e21b40fa"),
                            StepNumber = 3
                        },
                        new
                        {
                            Id = new Guid("d1b064a7-9010-445e-a33e-b7c0c22ccbcc"),
                            Description = "While the tofu bakes prepare your rice by bringing 12 cups of water to a boil in a large pot. Once boiling, add rinsed rice and stir. Boil on high uncovered for 30 minutes, then strain for 10 seconds and return to pot removed from the heat. Cover with a lid and let steam for 10 minutes*.",
                            RecipeId = new Guid("ce5db7c4-d085-4c2e-ae6c-8458e21b40fa"),
                            StepNumber = 4
                        },
                        new
                        {
                            Id = new Guid("074a2222-26af-4dca-b382-e50516988529"),
                            Description = "While rice and tofu are cooking, prepare sauce by adding all ingredients to a medium-size mixing bowl and whisking to combine. Taste and adjust flavor as needed, adding more tamari or soy sauce for saltiness, peanut butter for creaminess, brown sugar for sweetness, or chili garlic sauce for heat.",
                            RecipeId = new Guid("ce5db7c4-d085-4c2e-ae6c-8458e21b40fa"),
                            StepNumber = 5
                        },
                        new
                        {
                            Id = new Guid("f9f74755-1b60-4ace-b724-b9e5d0226e56"),
                            Description = "Once the tofu is done baking, add directly to the sauce and marinate for 5 minutes, stirring occasionally",
                            RecipeId = new Guid("ce5db7c4-d085-4c2e-ae6c-8458e21b40fa"),
                            StepNumber = 6
                        },
                        new
                        {
                            Id = new Guid("3ffcebe7-a509-43bf-ab1f-47ac6dd7d94f"),
                            Description = "Heat a large metal or cast iron skillet over medium heat. Once hot, use a slotted spoon to scoop the tofu into the pan leaving most of the sauce behind. Cook for 3-4 minutes, stirring occasionally, until deep golden brown on all sides (see photo). Lower heat if browning too quickly. Remove from pan and set aside.",
                            RecipeId = new Guid("ce5db7c4-d085-4c2e-ae6c-8458e21b40fa"),
                            StepNumber = 7
                        },
                        new
                        {
                            Id = new Guid("2ea5b2e8-d385-4cef-9f9a-eb2ec057b2bf"),
                            Description = "To the still hot pan add garlic, green onion, peas and carrots. Sauté for 3-4 minutes, stirring occasionally, and season with 1 Tbsp (15 ml) tamari or soy sauce",
                            RecipeId = new Guid("ce5db7c4-d085-4c2e-ae6c-8458e21b40fa"),
                            StepNumber = 8
                        },
                        new
                        {
                            Id = new Guid("ec37c661-0e9e-47b2-921e-ba0e7a2c6ee8"),
                            Description = "Add cooked rice, tofu, and remaining sauce and stir. Cook over medium-high heat for 3-4 minutes, stirring frequently.",
                            RecipeId = new Guid("ce5db7c4-d085-4c2e-ae6c-8458e21b40fa"),
                            StepNumber = 9
                        },
                        new
                        {
                            Id = new Guid("e809364d-5497-4c8b-8967-27c8f2ac52d6"),
                            Description = "Serve immediately with extra chili garlic sauce or sriracha for heat (optional). Crushed salted, roasted peanuts or cashews make a lovely additional garnish. Leftovers keep well in the refrigerator for 3-4 days, though best when fresh. Reheat in a skillet over medium heat or in the microwave.",
                            RecipeId = new Guid("ce5db7c4-d085-4c2e-ae6c-8458e21b40fa"),
                            StepNumber = 10
                        },
                        new
                        {
                            Id = new Guid("15645fe9-9c10-41f2-a2b8-3e33748c40c5"),
                            Description = "Sift flour, baking powder, sugar, and salt together in a large bowl. Make a well in the center and add milk, melted butter, and egg; mix until smooth.",
                            RecipeId = new Guid("c4f5d1d8-8f78-4cb7-a685-eefd074032dd"),
                            StepNumber = 1
                        },
                        new
                        {
                            Id = new Guid("e2a8528e-d1ab-4ff9-93a6-488850e92ca5"),
                            Description = "Heat a lightly oiled griddle or pan over medium-high heat. Pour or scoop the batter onto the griddle, using approximately 1/4 cup for each pancake; cook until bubbles form and the edges are dry, about 2 to 3 minutes. Flip and cook until browned on the other side. Repeat with remaining batter.",
                            RecipeId = new Guid("c4f5d1d8-8f78-4cb7-a685-eefd074032dd"),
                            StepNumber = 2
                        },
                        new
                        {
                            Id = new Guid("d5a01bb6-fcc7-449f-a8e1-7fcb27c5a9e5"),
                            Description = "Mix the dressing ingredients together in a small bowl with 1 tbsp water.",
                            RecipeId = new Guid("4445995c-bcc7-4e7a-b791-8cd8609bab42"),
                            StepNumber = 1
                        },
                        new
                        {
                            Id = new Guid("2ad520d4-cb16-4ac8-b0c8-4d2141de0dc7"),
                            Description = "Meanwhile boil the potatoes for 7 mins, add the beans and boil 5 mins more or until both are just tender, then drain. Boil 2 eggs for 8 minutes then shell and halve.",
                            RecipeId = new Guid("4445995c-bcc7-4e7a-b791-8cd8609bab42"),
                            StepNumber = 2
                        },
                        new
                        {
                            Id = new Guid("7dc005eb-f760-4b34-ad9d-916367bd27c7"),
                            Description = "Toss the beans, potatoes and remaining salad ingredients, except the eggs, together in a large bowl with half the dressing. Arrange the eggs on top and drizzle over the remaining dressing.",
                            RecipeId = new Guid("4445995c-bcc7-4e7a-b791-8cd8609bab42"),
                            StepNumber = 3
                        },
                        new
                        {
                            Id = new Guid("e62475e0-71fb-4969-ba8b-fcf05aacfe37"),
                            Description = "Stir all ingredients except optional chips to form a dough. Either shape into bars with your hands or smooth into a lined 8×8 pan, refrigerate until chilled, then cut into bars.",
                            RecipeId = new Guid("38a2b613-d9fd-48d2-b40c-9acb36c51aa6"),
                            StepNumber = 1
                        },
                        new
                        {
                            Id = new Guid("72267ce8-e535-403e-8d53-c3adee0c4755"),
                            Description = "For the optional chocolate coating, spread the melted chocolate over the pan before chilling. (I usually stir 2 tsp oil into the melted chocolate for a smoother sauce, but it's not required.) Or you can dip the bars into the chocolate sauce individually and then chill to set.",
                            RecipeId = new Guid("38a2b613-d9fd-48d2-b40c-9acb36c51aa6"),
                            StepNumber = 2
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Recipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CookTime")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("DietId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImgURL")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("PrepTime")
                        .HasColumnType("int");

                    b.Property<int>("Servings")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DietId");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("350c87a1-ffdc-473c-8af9-83edf8db8c31"),
                            ApplicationUserId = "00000000-0000-0000-0000-000000000002",
                            CategoryId = new Guid("8f1023cd-0a5a-4e53-b024-76d2c111e4c5"),
                            CookTime = 30,
                            Description = "A healthy vegan breakfast",
                            DietId = new Guid("7b5b75ce-ea6e-46f5-9ca9-bd6ba7f6d682"),
                            ImgURL = "https://simpleveganblog.com/wp-content/uploads/2022/07/tofu-scramble-1.jpg",
                            PrepTime = 15,
                            Servings = 2,
                            Title = "Scrambled Tofu"
                        },
                        new
                        {
                            Id = new Guid("e59cb9cd-e770-4c15-b3fa-82e153bf8546"),
                            ApplicationUserId = "00000000-0000-0000-0000-000000000003",
                            CategoryId = new Guid("27fa19ac-73ef-453d-a5d7-d7f2f90a5a54"),
                            CookTime = 10,
                            Description = "A smoothie containing 3 types of berries",
                            DietId = new Guid("72879d1b-cad1-493d-9b87-cf39b98fa204"),
                            ImgURL = "https://cookingformysoul.com/wp-content/uploads/2022/05/mixed-berry-smoothie-2-min.jpg",
                            PrepTime = 5,
                            Servings = 2,
                            Title = "Tripple berry smoothie"
                        },
                        new
                        {
                            Id = new Guid("5ad0e1ba-5b8f-46b8-810f-18bcf88356ff"),
                            ApplicationUserId = "00000000-0000-0000-0000-000000000002",
                            CategoryId = new Guid("da4c0975-41c5-4651-9235-0ff05fcc9e68"),
                            CookTime = 5,
                            Description = "A fast and healthy lunch, packed with protein, for people in a hurry",
                            DietId = new Guid("72879d1b-cad1-493d-9b87-cf39b98fa204"),
                            ImgURL = "https://www.wholesomeyum.com/wp-content/uploads/2019/05/wholesomeyum-avocado-tuna-salad-recipe-1.jpg",
                            PrepTime = 5,
                            Servings = 2,
                            Title = "Tuna avocado salad"
                        },
                        new
                        {
                            Id = new Guid("a8826730-ee34-42fa-9fdd-357efa440e8f"),
                            ApplicationUserId = "00000000-0000-0000-0000-000000000002",
                            CategoryId = new Guid("5a42a6dc-79d0-4c3e-99ec-06def96cc5c6"),
                            CookTime = 60,
                            Description = "This keto mousse gets its rich, creamy texture from avocados.",
                            DietId = new Guid("705f40d3-fc00-4781-a7b9-8c38dbfd6987"),
                            ImgURL = "https://thebigmansworld.com/wp-content/uploads/2022/07/keto-chocolate-mousse.jpg",
                            PrepTime = 15,
                            Servings = 2,
                            Title = "Keto Chocolate Mousse"
                        },
                        new
                        {
                            Id = new Guid("1a529ac5-d1ee-48a6-b654-c37bde10202f"),
                            ApplicationUserId = "00000000-0000-0000-0000-000000000002",
                            CategoryId = new Guid("4168b4e7-b6b8-44de-a64b-7b6bccb1c1aa"),
                            CookTime = 40,
                            Description = "A hearty bowl of chili is the perfect dinner for a blustery winter day.",
                            DietId = new Guid("a1b84c43-91db-4295-8d92-3383219599ed"),
                            ImgURL = "https://www.laurafuentes.com/wp-content/uploads/2013/10/Paleo_chili_recipe-card_1-2.jpg",
                            PrepTime = 15,
                            Servings = 2,
                            Title = "Paleo Chili"
                        },
                        new
                        {
                            Id = new Guid("6774c795-1374-4968-b8c4-d799c95a99aa"),
                            ApplicationUserId = "00000000-0000-0000-0000-000000000002",
                            CategoryId = new Guid("27fa19ac-73ef-453d-a5d7-d7f2f90a5a54"),
                            CookTime = 5,
                            Description = "This easy milkshake recipe gives you the perfect ratio of milk to ice cream and is completely customizable! ",
                            DietId = new Guid("72879d1b-cad1-493d-9b87-cf39b98fa204"),
                            ImgURL = "https://images.unsplash.com/photo-1568901839119-631418a3910d?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Nnx8bWlsa3NoYWtlfGVufDB8fDB8fA%3D%3D&auto=format&fit=crop&w=500&q=60",
                            PrepTime = 5,
                            Servings = 1,
                            Title = "Easy Vanilla Milkshake"
                        },
                        new
                        {
                            Id = new Guid("ce5db7c4-d085-4c2e-ae6c-8458e21b40fa"),
                            ApplicationUserId = "00000000-0000-0000-0000-000000000002",
                            CategoryId = new Guid("da4c0975-41c5-4651-9235-0ff05fcc9e68"),
                            CookTime = 60,
                            Description = "Easy, 10-ingredient vegan fried rice that’s loaded with vegetables, crispy baked tofu, and tons of flavor! A healthy, satisfying plant-based side dish or entrée.",
                            DietId = new Guid("7b5b75ce-ea6e-46f5-9ca9-bd6ba7f6d682"),
                            ImgURL = "https://shortgirltallorder.com/wp-content/uploads/2020/03/veggie-fried-rice-square-4.jpg",
                            PrepTime = 15,
                            Servings = 4,
                            Title = "Easy Vegan Fried Rice"
                        },
                        new
                        {
                            Id = new Guid("c4f5d1d8-8f78-4cb7-a685-eefd074032dd"),
                            ApplicationUserId = "00000000-0000-0000-0000-000000000002",
                            CategoryId = new Guid("5a42a6dc-79d0-4c3e-99ec-06def96cc5c6"),
                            CookTime = 15,
                            Description = "I found this pancake recipe in my Grandma's recipe book. Judging from the weathered look of this recipe card, this was a family favorite.",
                            DietId = new Guid("72879d1b-cad1-493d-9b87-cf39b98fa204"),
                            ImgURL = "https://images.unsplash.com/photo-1565299543923-37dd37887442?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=781&q=80",
                            PrepTime = 5,
                            Servings = 8,
                            Title = "Good Old-Fashioned Pancakes"
                        },
                        new
                        {
                            Id = new Guid("4445995c-bcc7-4e7a-b791-8cd8609bab42"),
                            ApplicationUserId = "00000000-0000-0000-0000-000000000003",
                            CategoryId = new Guid("fdfa7823-b3cb-4354-98cd-ae768eb7af0f"),
                            CookTime = 10,
                            Description = "A vegetarian Niçoise salad, that's packed with goodness - fibre, folate, iron, vitamin c and gluten-free too",
                            DietId = new Guid("fbaa5c0a-b224-4ba8-ac7b-1f3b5a4cacd3"),
                            ImgURL = "https://images.unsplash.com/photo-1512621776951-a57141f2eefd?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80",
                            PrepTime = 10,
                            Servings = 2,
                            Title = "Egg Niçoise salad"
                        },
                        new
                        {
                            Id = new Guid("38a2b613-d9fd-48d2-b40c-9acb36c51aa6"),
                            ApplicationUserId = "00000000-0000-0000-0000-000000000003",
                            CategoryId = new Guid("08819291-50e2-4c2b-b0a1-3a85ffe13ea8"),
                            CookTime = 5,
                            Description = "If you’re still buying protein bars at the store, this quick and simple vegan protein bar recipe might completely change your life…",
                            DietId = new Guid("72879d1b-cad1-493d-9b87-cf39b98fa204"),
                            ImgURL = "https://images.unsplash.com/photo-1622484212850-eb596d769edc?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80",
                            PrepTime = 5,
                            Servings = 10,
                            Title = "Easy Homemade Protein Bars"
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.RecipeIngredient", b =>
                {
                    b.Property<Guid>("IngredientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IngredientId", "RecipeId");

                    b.HasIndex("RecipeId");

                    b.HasIndex("UnitId");

                    b.ToTable("RecipeIngredients");

                    b.HasData(
                        new
                        {
                            IngredientId = new Guid("729c7745-ad0d-4c4d-bdb3-e3cc88795946"),
                            RecipeId = new Guid("350c87a1-ffdc-473c-8af9-83edf8db8c31"),
                            Amount = 1.0,
                            UnitId = new Guid("414fde9f-a33a-40bc-8505-d83ab1ec0ad2")
                        },
                        new
                        {
                            IngredientId = new Guid("1c41dcde-22c9-4ae8-a1f5-718aea034da0"),
                            RecipeId = new Guid("350c87a1-ffdc-473c-8af9-83edf8db8c31"),
                            Amount = 0.5,
                            UnitId = new Guid("9aebd1dc-5543-4161-95e8-a6627d02cf57")
                        },
                        new
                        {
                            IngredientId = new Guid("4f830a38-a506-4c08-acb1-823f79a4cd66"),
                            RecipeId = new Guid("350c87a1-ffdc-473c-8af9-83edf8db8c31"),
                            Amount = 0.5,
                            UnitId = new Guid("9aebd1dc-5543-4161-95e8-a6627d02cf57")
                        },
                        new
                        {
                            IngredientId = new Guid("002ddabe-b201-4679-9bfe-f6dca4cc7b53"),
                            RecipeId = new Guid("350c87a1-ffdc-473c-8af9-83edf8db8c31"),
                            Amount = 0.5,
                            UnitId = new Guid("4f31e663-f774-41b4-bf53-223829168a25")
                        },
                        new
                        {
                            IngredientId = new Guid("6c8e12c8-a6fd-44b5-a47c-2f6026345859"),
                            RecipeId = new Guid("350c87a1-ffdc-473c-8af9-83edf8db8c31"),
                            Amount = 0.75,
                            UnitId = new Guid("e472535e-c831-4133-8c4c-b7d2a070ea46")
                        },
                        new
                        {
                            IngredientId = new Guid("97a1d277-4983-4391-bff2-d5eed6f0b722"),
                            RecipeId = new Guid("350c87a1-ffdc-473c-8af9-83edf8db8c31"),
                            Amount = 1.0,
                            UnitId = new Guid("7acc646e-c783-45ec-b7e3-0ab8acf60c7d")
                        },
                        new
                        {
                            IngredientId = new Guid("ced46de1-3ca6-4e36-8860-c3ea9cbe7818"),
                            RecipeId = new Guid("e59cb9cd-e770-4c15-b3fa-82e153bf8546"),
                            Amount = 1.0,
                            UnitId = new Guid("9aebd1dc-5543-4161-95e8-a6627d02cf57")
                        },
                        new
                        {
                            IngredientId = new Guid("a7259215-0019-447c-bf29-edb6ec508f6b"),
                            RecipeId = new Guid("e59cb9cd-e770-4c15-b3fa-82e153bf8546"),
                            Amount = 250.0,
                            UnitId = new Guid("673c3060-bf5a-4090-abd0-b0e9e92c9439")
                        },
                        new
                        {
                            IngredientId = new Guid("b323a5e0-1049-4d74-b263-fa8b3ddb274a"),
                            RecipeId = new Guid("e59cb9cd-e770-4c15-b3fa-82e153bf8546"),
                            Amount = 200.0,
                            UnitId = new Guid("d7e45b8a-3375-4b20-99ee-99686515af31")
                        },
                        new
                        {
                            IngredientId = new Guid("372c5ae2-7acc-48a6-b65f-9de13846c9d3"),
                            RecipeId = new Guid("e59cb9cd-e770-4c15-b3fa-82e153bf8546"),
                            Amount = 150.0,
                            UnitId = new Guid("d7e45b8a-3375-4b20-99ee-99686515af31")
                        },
                        new
                        {
                            IngredientId = new Guid("1c5e3925-8ae4-4926-9eac-3628e7920984"),
                            RecipeId = new Guid("e59cb9cd-e770-4c15-b3fa-82e153bf8546"),
                            Amount = 150.0,
                            UnitId = new Guid("d7e45b8a-3375-4b20-99ee-99686515af31")
                        },
                        new
                        {
                            IngredientId = new Guid("5a934a61-3346-4fd4-bdc4-325398557bf9"),
                            RecipeId = new Guid("e59cb9cd-e770-4c15-b3fa-82e153bf8546"),
                            Amount = 150.0,
                            UnitId = new Guid("d7e45b8a-3375-4b20-99ee-99686515af31")
                        },
                        new
                        {
                            IngredientId = new Guid("9325f2d5-05f3-4ca5-b9ab-bef617030ceb"),
                            RecipeId = new Guid("5ad0e1ba-5b8f-46b8-810f-18bcf88356ff"),
                            Amount = 2.0,
                            UnitId = new Guid("9aebd1dc-5543-4161-95e8-a6627d02cf57")
                        },
                        new
                        {
                            IngredientId = new Guid("f40bb01d-0ae6-411c-815f-0125f01f1224"),
                            RecipeId = new Guid("5ad0e1ba-5b8f-46b8-810f-18bcf88356ff"),
                            Amount = 140.0,
                            UnitId = new Guid("d7e45b8a-3375-4b20-99ee-99686515af31")
                        },
                        new
                        {
                            IngredientId = new Guid("299140ef-1ffe-4c3b-84c9-11b2c3022f62"),
                            RecipeId = new Guid("5ad0e1ba-5b8f-46b8-810f-18bcf88356ff"),
                            Amount = 2.0,
                            UnitId = new Guid("7acc646e-c783-45ec-b7e3-0ab8acf60c7d")
                        },
                        new
                        {
                            IngredientId = new Guid("6d461018-2399-412f-89fe-48a1d91e1c23"),
                            RecipeId = new Guid("5ad0e1ba-5b8f-46b8-810f-18bcf88356ff"),
                            Amount = 0.5,
                            UnitId = new Guid("e472535e-c831-4133-8c4c-b7d2a070ea46")
                        },
                        new
                        {
                            IngredientId = new Guid("f2f4799b-cd1b-4b70-85a9-171cc1d130ae"),
                            RecipeId = new Guid("5ad0e1ba-5b8f-46b8-810f-18bcf88356ff"),
                            Amount = 3.0,
                            UnitId = new Guid("7acc646e-c783-45ec-b7e3-0ab8acf60c7d")
                        },
                        new
                        {
                            IngredientId = new Guid("a3477ac7-b564-4312-89e4-e5159c0ca6ee"),
                            RecipeId = new Guid("5ad0e1ba-5b8f-46b8-810f-18bcf88356ff"),
                            Amount = 1.0,
                            UnitId = new Guid("7acc646e-c783-45ec-b7e3-0ab8acf60c7d")
                        },
                        new
                        {
                            IngredientId = new Guid("1c41dcde-22c9-4ae8-a1f5-718aea034da0"),
                            RecipeId = new Guid("5ad0e1ba-5b8f-46b8-810f-18bcf88356ff"),
                            Amount = 3.0,
                            UnitId = new Guid("7acc646e-c783-45ec-b7e3-0ab8acf60c7d")
                        },
                        new
                        {
                            IngredientId = new Guid("9325f2d5-05f3-4ca5-b9ab-bef617030ceb"),
                            RecipeId = new Guid("a8826730-ee34-42fa-9fdd-357efa440e8f"),
                            Amount = 2.0,
                            UnitId = new Guid("9aebd1dc-5543-4161-95e8-a6627d02cf57")
                        },
                        new
                        {
                            IngredientId = new Guid("16caadcd-699e-4a5d-9dc5-f54e41692784"),
                            RecipeId = new Guid("a8826730-ee34-42fa-9fdd-357efa440e8f"),
                            Amount = 0.75,
                            UnitId = new Guid("4f31e663-f774-41b4-bf53-223829168a25")
                        },
                        new
                        {
                            IngredientId = new Guid("3a1ec623-e070-4912-9fce-4e48bb9aa5e9"),
                            RecipeId = new Guid("a8826730-ee34-42fa-9fdd-357efa440e8f"),
                            Amount = 0.5,
                            UnitId = new Guid("4f31e663-f774-41b4-bf53-223829168a25")
                        },
                        new
                        {
                            IngredientId = new Guid("58090840-b96b-4a9f-a36c-21595d46a455"),
                            RecipeId = new Guid("a8826730-ee34-42fa-9fdd-357efa440e8f"),
                            Amount = 0.25,
                            UnitId = new Guid("4f31e663-f774-41b4-bf53-223829168a25")
                        },
                        new
                        {
                            IngredientId = new Guid("3fd377b4-7400-4309-820c-15264ff4d7d6"),
                            RecipeId = new Guid("a8826730-ee34-42fa-9fdd-357efa440e8f"),
                            Amount = 3.0,
                            UnitId = new Guid("7acc646e-c783-45ec-b7e3-0ab8acf60c7d")
                        },
                        new
                        {
                            IngredientId = new Guid("3b79e7f5-95f4-44dc-90b3-254f6adc1af2"),
                            RecipeId = new Guid("a8826730-ee34-42fa-9fdd-357efa440e8f"),
                            Amount = 1.0,
                            UnitId = new Guid("e472535e-c831-4133-8c4c-b7d2a070ea46")
                        },
                        new
                        {
                            IngredientId = new Guid("16ecdb26-24ec-48b6-8ffd-45bc188ad234"),
                            RecipeId = new Guid("a8826730-ee34-42fa-9fdd-357efa440e8f"),
                            Amount = 0.5,
                            UnitId = new Guid("e472535e-c831-4133-8c4c-b7d2a070ea46")
                        },
                        new
                        {
                            IngredientId = new Guid("74fcb0c7-2714-43d3-8f02-7cc22f8d50a1"),
                            RecipeId = new Guid("1a529ac5-d1ee-48a6-b654-c37bde10202f"),
                            Amount = 1.0,
                            UnitId = new Guid("4f31e663-f774-41b4-bf53-223829168a25")
                        },
                        new
                        {
                            IngredientId = new Guid("ced0cac2-2ee1-474c-a07e-a8f1b9b77608"),
                            RecipeId = new Guid("1a529ac5-d1ee-48a6-b654-c37bde10202f"),
                            Amount = 0.5,
                            UnitId = new Guid("9aebd1dc-5543-4161-95e8-a6627d02cf57")
                        },
                        new
                        {
                            IngredientId = new Guid("f53feeb9-bc74-4211-9772-fd4ba3806b73"),
                            RecipeId = new Guid("1a529ac5-d1ee-48a6-b654-c37bde10202f"),
                            Amount = 2.0,
                            UnitId = new Guid("9aebd1dc-5543-4161-95e8-a6627d02cf57")
                        },
                        new
                        {
                            IngredientId = new Guid("24e47ca1-08cc-4c98-a84e-fb9876d2c39a"),
                            RecipeId = new Guid("1a529ac5-d1ee-48a6-b654-c37bde10202f"),
                            Amount = 0.5,
                            UnitId = new Guid("4f31e663-f774-41b4-bf53-223829168a25")
                        },
                        new
                        {
                            IngredientId = new Guid("73743b7a-4d22-43c6-9be4-6caf81fe350b"),
                            RecipeId = new Guid("1a529ac5-d1ee-48a6-b654-c37bde10202f"),
                            Amount = 2.0,
                            UnitId = new Guid("7acc646e-c783-45ec-b7e3-0ab8acf60c7d")
                        },
                        new
                        {
                            IngredientId = new Guid("b1182f5b-d42a-4180-8353-7d3a92c2a087"),
                            RecipeId = new Guid("1a529ac5-d1ee-48a6-b654-c37bde10202f"),
                            Amount = 2.0,
                            UnitId = new Guid("e472535e-c831-4133-8c4c-b7d2a070ea46")
                        },
                        new
                        {
                            IngredientId = new Guid("53d679c2-afb1-443b-80ea-4fb8dc6d9fd9"),
                            RecipeId = new Guid("1a529ac5-d1ee-48a6-b654-c37bde10202f"),
                            Amount = 2.0,
                            UnitId = new Guid("e472535e-c831-4133-8c4c-b7d2a070ea46")
                        },
                        new
                        {
                            IngredientId = new Guid("64867aa2-8999-460d-9594-1e572cb095d2"),
                            RecipeId = new Guid("1a529ac5-d1ee-48a6-b654-c37bde10202f"),
                            Amount = 2.0,
                            UnitId = new Guid("7acc646e-c783-45ec-b7e3-0ab8acf60c7d")
                        },
                        new
                        {
                            IngredientId = new Guid("762ec50f-7ce0-4fe5-b8bb-a3e117974909"),
                            RecipeId = new Guid("6774c795-1374-4968-b8c4-d799c95a99aa"),
                            Amount = 1.5,
                            UnitId = new Guid("4f31e663-f774-41b4-bf53-223829168a25")
                        },
                        new
                        {
                            IngredientId = new Guid("6fa6e3d9-29ed-467f-9237-59ee215af996"),
                            RecipeId = new Guid("6774c795-1374-4968-b8c4-d799c95a99aa"),
                            Amount = 1.5,
                            UnitId = new Guid("4f31e663-f774-41b4-bf53-223829168a25")
                        },
                        new
                        {
                            IngredientId = new Guid("a4668ff6-a7f7-415a-a702-9949b8bab432"),
                            RecipeId = new Guid("6774c795-1374-4968-b8c4-d799c95a99aa"),
                            Amount = 0.0,
                            UnitId = new Guid("372aea6a-b2a8-4e3d-b3d2-8f88254dd70d")
                        },
                        new
                        {
                            IngredientId = new Guid("cbdb9581-c465-46e6-a862-3c9d264f02e1"),
                            RecipeId = new Guid("6774c795-1374-4968-b8c4-d799c95a99aa"),
                            Amount = 0.0,
                            UnitId = new Guid("372aea6a-b2a8-4e3d-b3d2-8f88254dd70d")
                        },
                        new
                        {
                            IngredientId = new Guid("3fd377b4-7400-4309-820c-15264ff4d7d6"),
                            RecipeId = new Guid("6774c795-1374-4968-b8c4-d799c95a99aa"),
                            Amount = 0.5,
                            UnitId = new Guid("e472535e-c831-4133-8c4c-b7d2a070ea46")
                        },
                        new
                        {
                            IngredientId = new Guid("729c7745-ad0d-4c4d-bdb3-e3cc88795946"),
                            RecipeId = new Guid("ce5db7c4-d085-4c2e-ae6c-8458e21b40fa"),
                            Amount = 1.0,
                            UnitId = new Guid("4f31e663-f774-41b4-bf53-223829168a25")
                        },
                        new
                        {
                            IngredientId = new Guid("1cddb371-eaa0-4345-88ea-3a76b8cad449"),
                            RecipeId = new Guid("ce5db7c4-d085-4c2e-ae6c-8458e21b40fa"),
                            Amount = 1.0,
                            UnitId = new Guid("4f31e663-f774-41b4-bf53-223829168a25")
                        },
                        new
                        {
                            IngredientId = new Guid("67355bf3-fa20-4ffc-9f61-21f96b8695aa"),
                            RecipeId = new Guid("ce5db7c4-d085-4c2e-ae6c-8458e21b40fa"),
                            Amount = 4.0,
                            UnitId = new Guid("438d7974-91a4-49f4-915c-436922af5b63")
                        },
                        new
                        {
                            IngredientId = new Guid("47d92972-b628-49a8-a622-484ebd54b9b1"),
                            RecipeId = new Guid("ce5db7c4-d085-4c2e-ae6c-8458e21b40fa"),
                            Amount = 1.0,
                            UnitId = new Guid("4f31e663-f774-41b4-bf53-223829168a25")
                        },
                        new
                        {
                            IngredientId = new Guid("50e92746-f0ca-404f-af02-acc95f20fb7f"),
                            RecipeId = new Guid("ce5db7c4-d085-4c2e-ae6c-8458e21b40fa"),
                            Amount = 0.5,
                            UnitId = new Guid("4f31e663-f774-41b4-bf53-223829168a25")
                        },
                        new
                        {
                            IngredientId = new Guid("7a34c6ab-9b1f-4da1-8bf5-9c3e06b48d5c"),
                            RecipeId = new Guid("ce5db7c4-d085-4c2e-ae6c-8458e21b40fa"),
                            Amount = 0.5,
                            UnitId = new Guid("4f31e663-f774-41b4-bf53-223829168a25")
                        },
                        new
                        {
                            IngredientId = new Guid("43e97756-9852-4be9-8501-e29c10d17c18"),
                            RecipeId = new Guid("ce5db7c4-d085-4c2e-ae6c-8458e21b40fa"),
                            Amount = 3.0,
                            UnitId = new Guid("7acc646e-c783-45ec-b7e3-0ab8acf60c7d")
                        },
                        new
                        {
                            IngredientId = new Guid("e67642d0-a2dc-4208-b0a1-ef264c13f4af"),
                            RecipeId = new Guid("ce5db7c4-d085-4c2e-ae6c-8458e21b40fa"),
                            Amount = 2.0,
                            UnitId = new Guid("7acc646e-c783-45ec-b7e3-0ab8acf60c7d")
                        },
                        new
                        {
                            IngredientId = new Guid("516d455e-b9cf-4cbe-b621-e9e3b4eb2efb"),
                            RecipeId = new Guid("ce5db7c4-d085-4c2e-ae6c-8458e21b40fa"),
                            Amount = 1.0,
                            UnitId = new Guid("7acc646e-c783-45ec-b7e3-0ab8acf60c7d")
                        },
                        new
                        {
                            IngredientId = new Guid("9d3d6081-f9b0-41f1-8e1b-c3fb2d8815f7"),
                            RecipeId = new Guid("ce5db7c4-d085-4c2e-ae6c-8458e21b40fa"),
                            Amount = 1.0,
                            UnitId = new Guid("e472535e-c831-4133-8c4c-b7d2a070ea46")
                        },
                        new
                        {
                            IngredientId = new Guid("77cbcee7-7699-464a-af62-cd8529383f63"),
                            RecipeId = new Guid("c4f5d1d8-8f78-4cb7-a685-eefd074032dd"),
                            Amount = 1.5,
                            UnitId = new Guid("4f31e663-f774-41b4-bf53-223829168a25")
                        },
                        new
                        {
                            IngredientId = new Guid("e8a0437f-5fe7-4266-ae18-6926ff873e43"),
                            RecipeId = new Guid("c4f5d1d8-8f78-4cb7-a685-eefd074032dd"),
                            Amount = 3.5,
                            UnitId = new Guid("e472535e-c831-4133-8c4c-b7d2a070ea46")
                        },
                        new
                        {
                            IngredientId = new Guid("85d89810-70c9-4331-9b4a-0ff093214292"),
                            RecipeId = new Guid("c4f5d1d8-8f78-4cb7-a685-eefd074032dd"),
                            Amount = 1.0,
                            UnitId = new Guid("7acc646e-c783-45ec-b7e3-0ab8acf60c7d")
                        },
                        new
                        {
                            IngredientId = new Guid("6d461018-2399-412f-89fe-48a1d91e1c23"),
                            RecipeId = new Guid("c4f5d1d8-8f78-4cb7-a685-eefd074032dd"),
                            Amount = 0.25,
                            UnitId = new Guid("e472535e-c831-4133-8c4c-b7d2a070ea46")
                        },
                        new
                        {
                            IngredientId = new Guid("6fa6e3d9-29ed-467f-9237-59ee215af996"),
                            RecipeId = new Guid("c4f5d1d8-8f78-4cb7-a685-eefd074032dd"),
                            Amount = 1.25,
                            UnitId = new Guid("4f31e663-f774-41b4-bf53-223829168a25")
                        },
                        new
                        {
                            IngredientId = new Guid("5ce56d5f-6c78-487b-9c2f-e24d38d422fc"),
                            RecipeId = new Guid("c4f5d1d8-8f78-4cb7-a685-eefd074032dd"),
                            Amount = 3.0,
                            UnitId = new Guid("7acc646e-c783-45ec-b7e3-0ab8acf60c7d")
                        },
                        new
                        {
                            IngredientId = new Guid("3c43ac55-3080-49b7-89cb-9bf73e1b529c"),
                            RecipeId = new Guid("c4f5d1d8-8f78-4cb7-a685-eefd074032dd"),
                            Amount = 1.0,
                            UnitId = new Guid("9aebd1dc-5543-4161-95e8-a6627d02cf57")
                        },
                        new
                        {
                            IngredientId = new Guid("e67642d0-a2dc-4208-b0a1-ef264c13f4af"),
                            RecipeId = new Guid("c4f5d1d8-8f78-4cb7-a685-eefd074032dd"),
                            Amount = 1.0,
                            UnitId = new Guid("7acc646e-c783-45ec-b7e3-0ab8acf60c7d")
                        },
                        new
                        {
                            IngredientId = new Guid("5580b4a8-a8ea-4d59-bb74-e2a6d3e0b2e0"),
                            RecipeId = new Guid("4445995c-bcc7-4e7a-b791-8cd8609bab42"),
                            Amount = 2.0,
                            UnitId = new Guid("7acc646e-c783-45ec-b7e3-0ab8acf60c7d")
                        },
                        new
                        {
                            IngredientId = new Guid("046dce63-063c-4b9e-887e-373efa9d2523"),
                            RecipeId = new Guid("4445995c-bcc7-4e7a-b791-8cd8609bab42"),
                            Amount = 1.0,
                            UnitId = new Guid("9aebd1dc-5543-4161-95e8-a6627d02cf57")
                        },
                        new
                        {
                            IngredientId = new Guid("f7e1dbe8-7d10-4c81-b546-39755a644c12"),
                            RecipeId = new Guid("4445995c-bcc7-4e7a-b791-8cd8609bab42"),
                            Amount = 1.0,
                            UnitId = new Guid("e472535e-c831-4133-8c4c-b7d2a070ea46")
                        },
                        new
                        {
                            IngredientId = new Guid("67355bf3-fa20-4ffc-9f61-21f96b8695aa"),
                            RecipeId = new Guid("4445995c-bcc7-4e7a-b791-8cd8609bab42"),
                            Amount = 1.0,
                            UnitId = new Guid("438d7974-91a4-49f4-915c-436922af5b63")
                        },
                        new
                        {
                            IngredientId = new Guid("d30e3a42-b19f-4d76-9148-0800e00bd667"),
                            RecipeId = new Guid("4445995c-bcc7-4e7a-b791-8cd8609bab42"),
                            Amount = 0.0,
                            UnitId = new Guid("372aea6a-b2a8-4e3d-b3d2-8f88254dd70d")
                        },
                        new
                        {
                            IngredientId = new Guid("3c43ac55-3080-49b7-89cb-9bf73e1b529c"),
                            RecipeId = new Guid("4445995c-bcc7-4e7a-b791-8cd8609bab42"),
                            Amount = 2.0,
                            UnitId = new Guid("9aebd1dc-5543-4161-95e8-a6627d02cf57")
                        },
                        new
                        {
                            IngredientId = new Guid("a62e02da-4a65-41d8-be38-b10ed92b6729"),
                            RecipeId = new Guid("4445995c-bcc7-4e7a-b791-8cd8609bab42"),
                            Amount = 250.0,
                            UnitId = new Guid("d7e45b8a-3375-4b20-99ee-99686515af31")
                        },
                        new
                        {
                            IngredientId = new Guid("64fb3156-5102-4130-94e7-c3d4bde88b63"),
                            RecipeId = new Guid("4445995c-bcc7-4e7a-b791-8cd8609bab42"),
                            Amount = 200.0,
                            UnitId = new Guid("d7e45b8a-3375-4b20-99ee-99686515af31")
                        },
                        new
                        {
                            IngredientId = new Guid("f4786aa0-8fac-4a7e-bc75-9379e4927973"),
                            RecipeId = new Guid("4445995c-bcc7-4e7a-b791-8cd8609bab42"),
                            Amount = 15.0,
                            UnitId = new Guid("d7e45b8a-3375-4b20-99ee-99686515af31")
                        },
                        new
                        {
                            IngredientId = new Guid("b0297b6f-c66b-4e25-9dd7-2ea631da0a6d"),
                            RecipeId = new Guid("4445995c-bcc7-4e7a-b791-8cd8609bab42"),
                            Amount = 6.0,
                            UnitId = new Guid("9aebd1dc-5543-4161-95e8-a6627d02cf57")
                        },
                        new
                        {
                            IngredientId = new Guid("516d455e-b9cf-4cbe-b621-e9e3b4eb2efb"),
                            RecipeId = new Guid("38a2b613-d9fd-48d2-b40c-9acb36c51aa6"),
                            Amount = 1.5,
                            UnitId = new Guid("4f31e663-f774-41b4-bf53-223829168a25")
                        },
                        new
                        {
                            IngredientId = new Guid("35ba74dd-b3ad-44e2-9d80-6abb956a0bbd"),
                            RecipeId = new Guid("38a2b613-d9fd-48d2-b40c-9acb36c51aa6"),
                            Amount = 0.75,
                            UnitId = new Guid("4f31e663-f774-41b4-bf53-223829168a25")
                        },
                        new
                        {
                            IngredientId = new Guid("e67642d0-a2dc-4208-b0a1-ef264c13f4af"),
                            RecipeId = new Guid("38a2b613-d9fd-48d2-b40c-9acb36c51aa6"),
                            Amount = 0.25,
                            UnitId = new Guid("4f31e663-f774-41b4-bf53-223829168a25")
                        },
                        new
                        {
                            IngredientId = new Guid("6d461018-2399-412f-89fe-48a1d91e1c23"),
                            RecipeId = new Guid("38a2b613-d9fd-48d2-b40c-9acb36c51aa6"),
                            Amount = 0.5,
                            UnitId = new Guid("e472535e-c831-4133-8c4c-b7d2a070ea46")
                        },
                        new
                        {
                            IngredientId = new Guid("d044f72e-a406-40c2-bf23-c832b6a80c0c"),
                            RecipeId = new Guid("38a2b613-d9fd-48d2-b40c-9acb36c51aa6"),
                            Amount = 35.0,
                            UnitId = new Guid("d7e45b8a-3375-4b20-99ee-99686515af31")
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateTimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("RecipeId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a649a0b5-4c2b-4625-a328-9933992ab162"),
                            ApplicationUserId = "00000000-0000-0000-0000-000000000003",
                            Comment = "Great recipe!",
                            CreationDate = new DateTime(2023, 6, 18, 13, 9, 18, 76, DateTimeKind.Local).AddTicks(8870),
                            Rating = 4,
                            RecipeId = new Guid("350c87a1-ffdc-473c-8af9-83edf8db8c31"),
                            UpdateTimeStamp = new DateTime(2023, 6, 18, 13, 9, 18, 76, DateTimeKind.Local).AddTicks(8907)
                        },
                        new
                        {
                            Id = new Guid("e8abb212-ee94-4214-a0d9-73ce43a55a86"),
                            ApplicationUserId = "00000000-0000-0000-0000-000000000003",
                            Comment = "Didn't taste good",
                            CreationDate = new DateTime(2022, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 2,
                            RecipeId = new Guid("350c87a1-ffdc-473c-8af9-83edf8db8c31"),
                            UpdateTimeStamp = new DateTime(2022, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("fdadde2c-57c9-4b12-a96c-5769733b13d2"),
                            ApplicationUserId = "00000000-0000-0000-0000-000000000002",
                            CreationDate = new DateTime(2022, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 3,
                            RecipeId = new Guid("e59cb9cd-e770-4c15-b3fa-82e153bf8546"),
                            UpdateTimeStamp = new DateTime(2022, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("44beb3de-e0cc-4073-ab32-b5254f8c6803"),
                            ApplicationUserId = "00000000-0000-0000-0000-000000000002",
                            Comment = "Definitely will eat this again!",
                            CreationDate = new DateTime(2022, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 5,
                            RecipeId = new Guid("e59cb9cd-e770-4c15-b3fa-82e153bf8546"),
                            UpdateTimeStamp = new DateTime(2022, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Unit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Units");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d7e45b8a-3375-4b20-99ee-99686515af31"),
                            Name = "grams"
                        },
                        new
                        {
                            Id = new Guid("673c3060-bf5a-4090-abd0-b0e9e92c9439"),
                            Name = "ml"
                        },
                        new
                        {
                            Id = new Guid("7acc646e-c783-45ec-b7e3-0ab8acf60c7d"),
                            Name = "tbsp"
                        },
                        new
                        {
                            Id = new Guid("e472535e-c831-4133-8c4c-b7d2a070ea46"),
                            Name = "tsp"
                        },
                        new
                        {
                            Id = new Guid("9aebd1dc-5543-4161-95e8-a6627d02cf57"),
                            Name = "piece"
                        },
                        new
                        {
                            Id = new Guid("414fde9f-a33a-40bc-8505-d83ab1ec0ad2"),
                            Name = "block"
                        },
                        new
                        {
                            Id = new Guid("4f31e663-f774-41b4-bf53-223829168a25"),
                            Name = "cup"
                        },
                        new
                        {
                            Id = new Guid("372aea6a-b2a8-4e3d-b3d2-8f88254dd70d"),
                            Name = "garnish"
                        },
                        new
                        {
                            Id = new Guid("438d7974-91a4-49f4-915c-436922af5b63"),
                            Name = "clove"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000001",
                            ConcurrencyStamp = "e8e1ee71-51f2-4c60-8066-aa33b5e73658",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000002",
                            ConcurrencyStamp = "ab9f6225-9217-42f8-a57c-2d474567f67a",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClaimType = "sub",
                            ClaimValue = "00000000-0000-0000-0000-000000000001",
                            UserId = "00000000-0000-0000-0000-000000000001"
                        },
                        new
                        {
                            Id = 2,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name",
                            ClaimValue = "ImiAdmin",
                            UserId = "00000000-0000-0000-0000-000000000001"
                        },
                        new
                        {
                            Id = 3,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress",
                            ClaimValue = "admin@imi.be",
                            UserId = "00000000-0000-0000-0000-000000000001"
                        },
                        new
                        {
                            Id = 4,
                            ClaimType = "hasApprovedTerms",
                            ClaimValue = "",
                            UserId = "00000000-0000-0000-0000-000000000001"
                        },
                        new
                        {
                            Id = 5,
                            ClaimType = "http://schemas.microsoft.com/ws/2008/06/identity/claims/role",
                            ClaimValue = "Admin",
                            UserId = "00000000-0000-0000-0000-000000000001"
                        },
                        new
                        {
                            Id = 6,
                            ClaimType = "sub",
                            ClaimValue = "00000000-0000-0000-0000-000000000002",
                            UserId = "00000000-0000-0000-0000-000000000002"
                        },
                        new
                        {
                            Id = 7,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name",
                            ClaimValue = "ImiUser",
                            UserId = "00000000-0000-0000-0000-000000000002"
                        },
                        new
                        {
                            Id = 8,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress",
                            ClaimValue = "user@imi.be",
                            UserId = "00000000-0000-0000-0000-000000000002"
                        },
                        new
                        {
                            Id = 9,
                            ClaimType = "hasApprovedTerms",
                            ClaimValue = "True",
                            UserId = "00000000-0000-0000-0000-000000000002"
                        },
                        new
                        {
                            Id = 10,
                            ClaimType = "http://schemas.microsoft.com/ws/2008/06/identity/claims/role",
                            ClaimValue = "User",
                            UserId = "00000000-0000-0000-0000-000000000002"
                        },
                        new
                        {
                            Id = 11,
                            ClaimType = "sub",
                            ClaimValue = "00000000-0000-0000-0000-000000000003",
                            UserId = "00000000-0000-0000-0000-000000000003"
                        },
                        new
                        {
                            Id = 12,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name",
                            ClaimValue = "ImiRefuser",
                            UserId = "00000000-0000-0000-0000-000000000003"
                        },
                        new
                        {
                            Id = 13,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress",
                            ClaimValue = "refuser@imi.be",
                            UserId = "00000000-0000-0000-0000-000000000003"
                        },
                        new
                        {
                            Id = 14,
                            ClaimType = "hasApprovedTerms",
                            ClaimValue = "False",
                            UserId = "00000000-0000-0000-0000-000000000003"
                        },
                        new
                        {
                            Id = 15,
                            ClaimType = "http://schemas.microsoft.com/ws/2008/06/identity/claims/role",
                            ClaimValue = "User",
                            UserId = "00000000-0000-0000-0000-000000000003"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "00000000-0000-0000-0000-000000000001",
                            RoleId = "00000000-0000-0000-0000-000000000001"
                        },
                        new
                        {
                            UserId = "00000000-0000-0000-0000-000000000002",
                            RoleId = "00000000-0000-0000-0000-000000000002"
                        },
                        new
                        {
                            UserId = "00000000-0000-0000-0000-000000000003",
                            RoleId = "00000000-0000-0000-0000-000000000002"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.FavoriteRecipe", b =>
                {
                    b.HasOne("Imi.Project.Api.Core.Entities.ApplicationUser", "ApplicationUser")
                        .WithMany("FavoriteRecipes")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imi.Project.Api.Core.Entities.Recipe", "Recipe")
                        .WithMany("FavoriteRecipes")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Instruction", b =>
                {
                    b.HasOne("Imi.Project.Api.Core.Entities.Recipe", "Recipe")
                        .WithMany("Instructions")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Recipe", b =>
                {
                    b.HasOne("Imi.Project.Api.Core.Entities.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("Imi.Project.Api.Core.Entities.Category", "Category")
                        .WithMany("Recipes")
                        .HasForeignKey("CategoryId");

                    b.HasOne("Imi.Project.Api.Core.Entities.Diet", "Diet")
                        .WithMany("Recipes")
                        .HasForeignKey("DietId");

                    b.Navigation("ApplicationUser");

                    b.Navigation("Category");

                    b.Navigation("Diet");
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.RecipeIngredient", b =>
                {
                    b.HasOne("Imi.Project.Api.Core.Entities.Ingredient", "Ingredient")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imi.Project.Api.Core.Entities.Recipe", "Recipe")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imi.Project.Api.Core.Entities.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Review", b =>
                {
                    b.HasOne("Imi.Project.Api.Core.Entities.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imi.Project.Api.Core.Entities.Recipe", "Recipe")
                        .WithMany("Reviews")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Imi.Project.Api.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Imi.Project.Api.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imi.Project.Api.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Imi.Project.Api.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.ApplicationUser", b =>
                {
                    b.Navigation("FavoriteRecipes");
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Category", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Diet", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Ingredient", b =>
                {
                    b.Navigation("RecipeIngredients");
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Recipe", b =>
                {
                    b.Navigation("FavoriteRecipes");

                    b.Navigation("Instructions");

                    b.Navigation("RecipeIngredients");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
